import { useState } from 'react';
import { TooltipBox, TooltipPosition, Trigger, Wrapper } from './styles';
import { AnimatePresence } from 'motion/react';

interface Props {
    children: React.ReactNode;
}

const InfoIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12" fill="none">
        <path
            d="M5.90663 1.38525C3.36212 1.38525 1.29199 3.45538 1.29199 5.99989C1.29199 8.54441 3.36212 10.6145 5.90663 10.6145C8.45114 10.6145 10.5213 8.54441 10.5213 5.99989C10.5213 3.45538 8.45114 1.38525 5.90663 1.38525ZM5.90663 3.27726C6.02528 3.27726 6.14127 3.31244 6.23992 3.37836C6.33857 3.44428 6.41546 3.53797 6.46087 3.64759C6.50628 3.7572 6.51816 3.87782 6.49501 3.99419C6.47186 4.11056 6.41472 4.21746 6.33083 4.30135C6.24693 4.38525 6.14004 4.44239 6.02367 4.46554C5.9073 4.48868 5.78668 4.4768 5.67706 4.4314C5.56744 4.38599 5.47375 4.3091 5.40783 4.21045C5.34191 4.11179 5.30673 3.99581 5.30673 3.87716C5.30673 3.71806 5.36993 3.56547 5.48244 3.45296C5.59494 3.34046 5.74753 3.27726 5.90663 3.27726ZM7.01414 8.4918H4.9837C4.88579 8.4918 4.79189 8.4529 4.72266 8.38367C4.65343 8.31444 4.61453 8.22054 4.61453 8.12263C4.61453 8.02472 4.65343 7.93082 4.72266 7.86158C4.79189 7.79235 4.88579 7.75346 4.9837 7.75346H5.62975V5.72301H5.26058C5.16267 5.72301 5.06877 5.68412 4.99954 5.61489C4.93031 5.54565 4.89141 5.45175 4.89141 5.35384C4.89141 5.25593 4.93031 5.16203 4.99954 5.0928C5.06877 5.02357 5.16267 4.98467 5.26058 4.98467H5.99892C6.09683 4.98467 6.19073 5.02357 6.25997 5.0928C6.3292 5.16203 6.3681 5.25593 6.3681 5.35384V7.75346H7.01414C7.11206 7.75346 7.20596 7.79235 7.27519 7.86158C7.34442 7.93082 7.38332 8.02472 7.38332 8.12263C7.38332 8.22054 7.34442 8.31444 7.27519 8.38367C7.20596 8.4529 7.11206 8.4918 7.01414 8.4918Z"
            fill="white"
        />
    </svg>
);

export default function InfoTooltip({ children }: Props) {
    const [isOpen, setIsOpen] = useState(false);

    return (
        <Wrapper>
            <Trigger onMouseEnter={() => setIsOpen(true)} onMouseLeave={() => setIsOpen(false)}>
                <InfoIcon />
            </Trigger>
            <AnimatePresence>
                {isOpen && (
                    <TooltipPosition>
                        <TooltipBox
                            initial={{ opacity: 0, y: 5 }}
                            animate={{ opacity: 1, y: 0 }}
                            exit={{ opacity: 0, y: 5 }}
                            transition={{ duration: 0.2 }}
                        >
                            {children}
                        </TooltipBox>
                    </TooltipPosition>
                )}
            </AnimatePresence>
        </Wrapper>
    );
}
