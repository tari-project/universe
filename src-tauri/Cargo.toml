[package]
name = "tari-universe"
authors = ["The Tari Development Community"]
description = "Tari Universe"
repository = "https://github.com/tari-project/universe"
license = "BSD-3-Clause"
version = "0.3.8"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.5", features = ["isolation"] }

[dependencies]
blake2 = "0.10"
jsonwebtoken = "9.3.0"
tari_common = { git = "https://github.com/tari-project/tari.git", branch = "development" }
tari_common_types = { git = "https://github.com/tari-project/tari.git", branch = "development" }
tari_shutdown = { git = "https://github.com/tari-project/tari.git", branch = "development" }
minotari_node_grpc_client = { git = "https://github.com/tari-project/tari.git", branch = "development" }
minotari_wallet_grpc_client = { git = "https://github.com/tari-project/tari.git", branch = "development" }
tari_core = { git = "https://github.com/tari-project/tari.git", branch = "development", features = [
    "transactions",
] }
tari_key_manager = { git = "https://github.com/tari-project/tari.git", branch = "development" }
tari_utilities = "0.7.0"
tari_crypto = "0.20.3"
anyhow = "1"
dirs-next = "2.0.0"
reqwest = { version = "0.12.5", features = ["stream", "json", "multipart"] }
tauri = { version = "1.8.0", features = [
    "system-tray",
    "updater",
    "window-show",
    "window-unminimize",
    "window-minimize",
    "window-hide",
    "window-unmaximize",
    "window-start-dragging",
    "window-maximize",
    "window-close",
    "macos-private-api",
    "isolation",
    "shell-open",
    "process-command-api",
] }
tauri-plugin-single-instance = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tokio = { version = "1", features = ["full"] }
semver = "1.0.23"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
futures-util = "0.3.30"
flate2 = "1.0.30"
tar = "0.4.26"
async_zip = { version = "0.0.17", features = ["full"] }
futures-lite = "2.3.0"
tokio-util = { version = "0.7.11", features = ["compat"] }
sanitize-filename = "0.5"
async-trait = "0.1.81"
sysinfo = "0.31.2"
log4rs = "1.3.0"
keyring = { version = "3.0.5", features = [
    "windows-native",
    "apple-native",
    "linux-native",
] }
nix = { version = "0.29.0", features = ["signal"] }
sha2 = "0.10.8"
regex = "1.10.5"
zip = "2.2.0"
zip-extensions = "0.8.1"
# static bind lzma
xz2 = { version = "0.1.7", features = ["static"] }
# humantime = "2.1.0"
open = "5"
thiserror = "1.0.26"

# needed for keymanager. TODO: Find a way of creating a keymanager without bundling sqlite
libsqlite3-sys = { version = "0.25.1", features = ["bundled"] }
log = "0.4.22"
rand = "0.8.5"
device_query = "2.1.0"
nvml-wrapper = "0.10.0"
# tonic = "0.12.0"

[features]
# This feature is used for production builds or when a dev server is not specified, DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
airdrop-local = []

[package.metadata.cargo-machete]
ignored = [
    "log4rs",
    "xz2",
    "libsqlite3-sys",
    "minotari_wallet_grpc_client",
    "dirs-next",
]
