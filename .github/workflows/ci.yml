---
name: CI

'on':
  workflow_dispatch:
  push:
    branches:
      - 'ci-*'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  merge_group:

concurrency:
  # https://docs.github.com/en/actions/examples/using-concurrency-expressions-and-a-test-matrix
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: ${{ !startsWith(github.ref, 'refs/tags/v') || github.ref != 'refs/heads/development' || github.ref != 'refs/heads/nextnet' || github.ref != 'refs/heads/stagenet' }}

permissions: {}

jobs:
  cargo-checks:
    name: cargo checks (fmt, clippy, check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: create empty dist dir
        run: |
          mkdir dist
      - name: install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends --assume-yes \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libprotobuf-dev \
            protobuf-compiler

      - name: install dependencies (linux/OpenCL)
        run: |
          sudo apt-get install --no-install-recommends --assume-yes \
            opencl-headers \
            ocl-icd-opencl-dev

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: swatinem/rust-cache@v2.7.5
        with:
          workspaces: './src-tauri -> target'

      - name: cargo format
        working-directory: ./src-tauri
        run: |
          cargo fmt --all -- --check

      - name: clippy lint
        working-directory: ./src-tauri
        env:
          AIRDROP_BASE_URL: http://localhost:4000
          AIRDROP_API_BASE_URL: http://localhost:3004
          AIRDROP_TWITTER_AUTH_URL: http://localhost:3004/auth/twitter
          TELEMETRY_API_URL: http://localhost:3004
        run: |
          cargo install cargo-lints
          cargo lints clippy --all-targets --all-features
      - name: cargo check
        working-directory: ./src-tauri
        run: |
          cargo check --release --all-targets --workspace

  machete:
    name: machete
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2.7.5
        with:
          workspaces: './src-tauri -> target'

      - name: cargo machete
        working-directory: ./src-tauri
        run: |
          cargo install cargo-machete
          cargo machete

  tauri-test-build:
    name: tauri-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends --assume-yes \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libprotobuf-dev \
            protobuf-compiler

      - name: install dependencies (linux/OpenCL)
        run: |
          sudo apt-get install --no-install-recommends --assume-yes \
            opencl-headers \
            ocl-icd-opencl-dev

      - name: Install Dependencies - Linux/GStreamer (for audio playback)
        run: |
          sudo apt-get install --no-install-recommends --assume-yes \
            libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 \
            gstreamer1.0-qt5 gstreamer1.0-pulseaudio gstreamer1.0-fdkaac patchelf

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      - name: Install dependencies (node)
        run: npm ci
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2.7.5
        with:
          workspaces: './src-tauri -> target'
      - name: cargo tauri build
        working-directory: ./src-tauri
        run: |
          cargo install tauri-cli --version "2.1.0" --locked
          cargo tauri --version
          cargo tauri build --ci --no-bundle

  file-licenses:
    name: file-licenses
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install ripgrep
        run: |
          # https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep_14.1.1-1_amd64.deb.sha256
          wget -v https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep_14.1.1-1_amd64.deb
          sudo dpkg -i ripgrep_14.1.1-1_amd64.deb
          rg --version || exit 1
      - name: run the license check
        run: ./scripts/file_license_check.sh
